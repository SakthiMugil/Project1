import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class SimplePasswordManager {
    private Map<String, String> passwords;

    public SimplePasswordManager() {
        this.passwords = new HashMap<>();
    }

    public void addPassword(String username, String password) {
        passwords.put(username, password);
        System.out.println("Password added successfully!");
    }

    public String getPassword(String username) {
        return passwords.get(username);
    }

    public void displayPasswords() {
        System.out.println("Stored Passwords:");
        for (Map.Entry<String, String> entry : passwords.entrySet()) {
            System.out.println("Username: " + entry.getKey() + ", Password: " + entry.getValue());
        }
    }

    public static void main(String[] args) {
        SimplePasswordManager passwordManager = new SimplePasswordManager();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("1. Add Password\n2. Get Password\n3. Display Passwords\n4. Exit");
            System.out.print("Choose an option: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    System.out.print("Enter username: ");
                    String newUsername = scanner.next();
                    System.out.print("Enter password: ");
                    String newPassword = scanner.next();
                    passwordManager.addPassword(newUsername, newPassword);
                    break;

                case 2:
                    System.out.print("Enter username: ");
                    String getUsername = scanner.next();
                    String retrievedPassword = passwordManager.getPassword(getUsername);
                    if (retrievedPassword != null) {
                        System.out.println("Password: " + retrievedPassword);
                    } else {
                        System.out.println("Username not found!");
                    }
                    break;

                case 3:
                    passwordManager.displayPasswords();
                    break;

                case 4:
                    System.out.println("Exiting...");
                    System.exit(0);
                    break;

                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
}
